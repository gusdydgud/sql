--1.
SELECT *
FROM EMPLOYEES E
WHERE SALARY >= (SELECT AVG(SALARY) FROM EMPLOYEES);
SELECT COUNT(*)
FROM EMPLOYEES E
WHERE SALARY >= (SELECT AVG(SALARY) FROM EMPLOYEES);
SELECT *
FROM EMPLOYEES E
WHERE SALARY >= (SELECT AVG(SALARY) FROM EMPLOYEES WHERE JOB_ID='IT_PROG');
--2
SELECT * FROM EMPLOYEES E WHERE DEPARTMENT_ID = (SELECT DEPARTMENT_ID FROM DEPARTMENTS D WHERE departMENT_ID=100 );
--3
SELECT * FROM EMPLOYEES;
SELECT * FROM EMPLOYEES WHERE MANAGER_ID > (SELECT MANAGER_ID FROM EMPLOYEES WHERE FIRST_NAME = 'Pat');
SELECT * FROM EMPLOYEES WHERE MANAGER_ID IN (SELECT MANAGER_ID FROM EMPLOYEES WHERE FIRST_NAME ='James');
SELECT * FROM EMPLOYEES WHERE DEPARTMENT_ID IN (SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE FIRST_NAME ='Steven');
SELECT * FROM EMPLOYEES WHERE SALARY > ANY (SELECT SALARY FROM EMPLOYEES WHERE FIRST_NAME='Steven');

--4
SELECT EMPLOYEE_ID,
       LAST_NAME||' '||FIRST_NAME AS 이름,
       DEPARTMENT_ID,
       (SELECT DEPARTMENT_NAME FROM DEPARTMENTS D WHERE D.department_id = E.DEPARTMENT_ID)
FROM EMPLOYEES E
ORDER BY EMPLOYEE_ID ;
--5
SELECT EMPLOYEE_ID,
       LAST_NAME||' '||FIRST_NAME AS 이름,
       E.DEPARTMENT_ID,
       D.DEPARTMENT_NAME
FROM EMPLOYEES E LEFT JOIN DEPARTMENTS D ON e.department_id=d.department_id
ORDER BY EMPLOYEE_ID;
--6
SELECT * FROM LOCATIONS;
SELECT * FROM DEPARTMENTS;
SELECT DEPARTMENT_ID,
       DEPARTMENT_NAME,
       STREET_ADDRESS,
       CITY
FROM departments D LEFT JOIN locations L ON d.location_id = l.location_id
ORDER BY DEPARTMENT_ID;
--7
SELECT DEPARTMENT_ID,
       DEPARTMENT_NAME,
       (SELECT STREET_ADDRESS FROM LOCATIONS L WHERE l.location_id = D.LOCATION_ID),
       (SELECT CITY FROM LOCATIONS L WHERE l.location_id = D.LOCATION_ID)
FROM departments D
ORDER BY DEPARTMENT_ID;
--8
SELECT * FROM LOCATIONS;
SELECT * FROM COUNTRIES;
SELECT L.LOCATION_ID,
       L.STREET_ADDRESS,
       L.CITY,
       L.COUNTRY_ID,
       (SELECT COUNTRY_NAME FROM COUNTRIES C WHERE c.country_id = L.COUNTRY_ID) AS COUNTRY_NAME
FROM LOCATIONS L
ORDER BY COUNTRY_NAME;
--9
SELECT FIRST_NAME, RN
FROM(SELECT ROWNUM AS RN, FIRST_NAME
     FROM (SELECT FIRST_NAME
           FROM EMPLOYEES 
           ORDER BY FIRST_NAME DESC))
WHERE RN BETWEEN 41 AND 50;
--10
SELECT RN, EMPLOYEE_ID,FIRST_NAME,HIRE_DATE
FROM(SELECT ROWNUM AS RN,HIRE_DATE ,EMPLOYEE_ID,FIRST_NAME
FROM (SELECT HIRE_DATE ,EMPLOYEE_ID,FIRST_NAME
      FROM EMPLOYEES
      ORDER BY HIRE_DATE))
WHERE RN BETWEEN 31 AND 40;
--11
SELECT 급여 ,FIRST_NAME
FROM (SELECT SALARY+(SALARY*NVL(COMMISSION_PCT,0)) AS 급여, FIRST_NAME
      FROM EMPLOYEES)
WHERE 급여 >= 10000;
--------------------------------------------------------------
--12
SELECT *
FROM(SELECT  ROWNUM AS RN,
             A.*
     FROM(SELECT EMPLOYEE_ID,
                 FIRST_NAME||' '||LAST_NAME AS NAME,
                 HIRE_DATE,
                 DEPARTMENT_NAME
          FROM EMPLOYEES E
          LEFT JOIN DEPARTMENTS D ON e.department_id=d.department_id
          ORDER BY HIRE_DATE) A)
WHERE RN BETWEEN 11 AND 20;
--
SELECT *
FROM (SELECT ROWNUM AS RN,
       A.*,
       (SELECT DEPARTMENT_NAME FROM DEPARTMENTS D WHERE A.DEPARTMENT_ID = d.department_id)AS DEPARTMENT_NAME
FROM(SELECT EMPLOYEE_ID,
            FIRST_NAME||' '||LAST_NAME AS NAME,
            HIRE_DATE,
            DEPARTMENT_ID
     FROM EMPLOYEES E
     ORDER BY HIRE_DATE)A)
WHERE RN BETWEEN 11 AND 20;
--13
SELECT ROWNUM AS RN,
       A.*,
       DEPARTMENT_NAME
FROM(--인라인 뷰는 테이블자리 어디든 들어감
    SELECT FIRST_NAME,
           SALARY,
           DEPARTMENT_ID
    FROM EMPLOYEES E
    WHERE JOB_ID = 'SA_MAN'
    ORDER BY SALARY DESC
)A LEFT JOIN DEPARTMENTS D ON A.department_id = d.department_id;

----14
--DEPARTMENTS테이블에서 각 부서의 부서명, 매니저아이디, 부서에 속한 인원수 를 출력하세요.
--조건) 인원수 기준 내림차순 정렬하세요.
--조건) 사람이 없는 부서는 출력하지 뽑지 않습니다.
--한트) 부서의 인원수 먼저 구한다. 이 테이블을 조인한다.
SELECT * FROM DEPARTMENTS;
SELECT * FROM EMPLOYEES;

SELECT DEPARTMENT_NAME, MANAGER_ID ,COUNT
FROM DEPARTMENTS D LEFT JOIN (SELECT COUNT(DEPARTMENT_ID) AS COUNT,DEPARTMENT_ID 
FROM EMPLOYEES GROUP BY DEPARTMENT_ID
ORDER BY COUNT(DEPARTMENT_ID))A ON d.department_id = A.department_id
WHERE COUNT IS NOT NULL
ORDER BY COUNT DESC;

--문제15
--부서에 모든 컬럼, 주소, 우편번호, 부서별 평균 연봉을 구해서 출력하세요.
--조건) 부서별 평균이 없으면 0으로 출력하세요
SELECT * FROM DEPARTMENTS;
SELECT * FROM LOCATIONS;
--부서별 평균연봉
SELECT TRUNC( AVG(SALARY)) AS 평균연봉,
       DEPARTMENT_ID
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID;

SELECT D.* , l.street_address, l.postal_code,E.평균연봉 
FROM DEPARTMENTS D
JOIN (SELECT TRUNC( NVL(AVG(SALARY),0)) AS 평균연봉,
             DEPARTMENT_ID
      FROM EMPLOYEES
      GROUP BY DEPARTMENT_ID) E
ON d.department_id = E.department_id
LEFT JOIN LOCATIONS L ON d.location_id = l.location_id;

--16
SELECT *
FROM(SELECT ROWNUM AS RN,department_id, DEPARTMENT_NAME, MANAGER_ID,LOCATION_ID,평균연봉
FROM(SELECT D.* , l.street_address, l.postal_code,E.평균연봉 
FROM DEPARTMENTS D
JOIN (SELECT TRUNC( NVL(AVG(SALARY),0)) AS 평균연봉,
             DEPARTMENT_ID
      FROM EMPLOYEES
      GROUP BY DEPARTMENT_ID) E
ON d.department_id = E.department_id
LEFT JOIN LOCATIONS L ON d.location_id = l.location_id
ORDER BY d.department_id))
WHERE RN BETWEEN 1 AND 10;





